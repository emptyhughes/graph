<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1">
	<!--script src="https://d3js.org/d3.v5.js"></script-->
	
</head>
<body>
<svg id='tree'></svg>
</body>
<script type='module' >
	import { require } from "./npnrequire.js";
	//import * as d3 from "https://d3js.org/d3.v6.js";
	let d3 = require("https://d3js.org/d3.v6.js")
		
	let width = 1000;
	
	 fetch('./flare-2.json')
                .then(res => res.json())
                .then(data => {
                  let tree = chart(data);
				  let treeElement = document.querySelector('#tree');
				  treeElement.parentNode.replaceChild(tree, treeElement);
                })
                .catch(err => console.error(err));
	
	let tree = data => {
	  const root = d3.hierarchy(data);
	  root.dx = 10;
	  root.dy = width / (root.height + 1);
	  return d3.tree().nodeSize([root.dx, root.dy])(root);
	}
	
	let chart = data => {
	  const root = tree(data);

	  let x0 = Infinity;
	  let x1 = -x0;
	  root.each(d => {
		if (d.x > x1) x1 = d.x;
		if (d.x < x0) x0 = d.x;
	  });

	  const svg = d3.create("svg")
		  .attr("viewBox", [0, 0, width, x1 - x0 + root.dx * 2]);
	  
	  const g = svg.append("g")
		  .attr("font-family", "sans-serif")
		  .attr("font-size", 10)
		  .attr("transform", `translate(${root.dy / 3},${root.dx - x0})`);
		
	  const link = g.append("g")
		.attr("fill", "none")
		.attr("stroke", "#555")
		.attr("stroke-opacity", 0.4)
		.attr("stroke-width", 1.5)
	  .selectAll("path")
		.data(root.links())
		.join("path")
		  .attr("d", d3.linkHorizontal()
			  .x(d => d.y)
			  .y(d => d.x));
	  
	  const node = g.append("g")
		  .attr("stroke-linejoin", "round")
		  .attr("stroke-width", 3)	
.on('click', click)  //mth				  
		.selectAll("g")
		.data(root.descendants())
		.join("g")
		  .attr("transform", d => `translate(${d.y},${d.x})`);

	  node.append("circle")
		  .attr("fill", d => d.children ? "#555" : "#999")
		  .attr("r", 2.5);

	  node.append("text")
		  .attr("dy", "0.31em")
		  .attr("x", d => d.children ? -6 : 6)
		  .attr("text-anchor", d => d.children ? "end" : "start")
		  .text(d => d.data.name)
		.clone(true).lower()
		  .attr("stroke", "white");
	  
	  return svg.node();
	  
	 function click(e) {
		let d = e.target;
        //if (d3.event.defaultPrevented) return; // click suppressed
       // d = toggleChildren(d);
       // update(d);
       // centerNode(d);
	   alert("click")
	}
	}
	
	
	
	</script>
</html>